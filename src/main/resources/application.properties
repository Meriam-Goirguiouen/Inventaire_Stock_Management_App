# ===============================================
# CONFIGURATION DE LA SOURCE DE DONNÉES (DataSource)
# ===============================================

# URL de connexion à votre base de données MySQL
# Le nom de votre BD est 'inventairestockdb'
spring.datasource.url=jdbc:mysql://localhost:3306/inventairestockdb?serverTimezone=UTC

spring.datasource.username=root
spring.datasource.password=


# ===============================================
# CONFIGURATION DE HIBERNATE (JPA)
# ===============================================

# 'update' va vérifier si les tables correspondent à vos entités Java et les mettra à jour si besoin.
# Comme vos tables existent déjà, c'est une bonne option.
spring.jpa.hibernate.ddl-auto=update

# Affiche les requêtes SQL générées par Hibernate dans la console
spring.jpa.show-sql=true

# Formate joliment les requêtes SQL affichées
spring.jpa.properties.hibernate.format_sql=true


# ===============================================
# CONFIGURATION DU BROKER JMS (ARTEMIS)
# ===============================================

# Ces lignes sont pour que l'app se connecte au broker que vous avez lancé
spring.artemis.mode=native
spring.artemis.broker-url=tcp://localhost:61616
spring.artemis.user=admin
spring.artemis.password=admin

# On dit à Spring JMS d'utiliser des "queues" par défaut
spring.jms.pub-sub-domain=false
